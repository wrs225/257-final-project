
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.34+14 (git sha1 11b9deba9, clang 10.0.0-4ubuntu1 -fPIC -Os)


-- Executing script file `design_prep.ys' --

1. Executing RTLIL frontend.
Input filename: design.il

2. Executing SCC pass (detecting logic loops).
Found 0 SCCs in module sar_tb_working.
Found 0 SCCs in module sar_adc__N_BITS_10.
Found 0 SCCs in module sample_and_hold.
Found 0 SCCs in module digital_to_analog_converter.
Found 0 SCCs in module comparator_latch.
Found 0 SCCs in module $paramod\successive_approximation_register\N_BITS=s32'00000000000000000000000000001010.
Found 0 SCCs in module $paramod\sar_adc\N_BITS=s32'00000000000000000000000000001010.
Found 0 SCCs in module $paramod\frequency_divider\DIVISION=s32'00000000000000000000001111101000.
Found 0 SCCs.

3. Executing SIMPLEMAP pass (map simple cells to gate primitives).

4. Executing MEMORY_NORDFF pass (extracting $dff cells from memories).

5. Executing ASYNC2SYNC pass.

6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sar_tb_working..
Finding unused cells or wires in module \sar_adc__N_BITS_10..
Finding unused cells or wires in module \sample_and_hold..
Finding unused cells or wires in module \digital_to_analog_converter..
Finding unused cells or wires in module \comparator_latch..
Finding unused cells or wires in module $paramod\successive_approximation_register\N_BITS=s32'00000000000000000000000000001010..
Finding unused cells or wires in module $paramod\sar_adc\N_BITS=s32'00000000000000000000000000001010..
Finding unused cells or wires in module $paramod\frequency_divider\DIVISION=s32'00000000000000000000001111101000..
Removed 6 unused cells and 6 unused wires.
<suppressed ~7 debug messages>

7. Executing FORMALFF pass.

8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\frequency_divider\DIVISION=s32'00000000000000000000001111101000..
Finding unused cells or wires in module $paramod\sar_adc\N_BITS=s32'00000000000000000000000000001010..
Finding unused cells or wires in module $paramod\successive_approximation_register\N_BITS=s32'00000000000000000000000000001010..
Finding unused cells or wires in module \comparator_latch..
Finding unused cells or wires in module \digital_to_analog_converter..
Finding unused cells or wires in module \sample_and_hold..
Finding unused cells or wires in module \sar_adc__N_BITS_10..
Finding unused cells or wires in module \sar_tb_working..
Removed 6 unused cells and 6 unused wires.
<suppressed ~12 debug messages>

9. Executing CHECK pass (checking for obvious problems).
Checking module $paramod\frequency_divider\DIVISION=s32'00000000000000000000001111101000...
Warning: Wire $paramod\frequency_divider\DIVISION=s32'00000000000000000000001111101000.\sys_counter is used but has no driver.
Checking module $paramod\sar_adc\N_BITS=s32'00000000000000000000000000001010...
Checking module $paramod\successive_approximation_register\N_BITS=s32'00000000000000000000000000001010...
Checking module comparator_latch...
Checking module digital_to_analog_converter...
Checking module sample_and_hold...
Checking module sar_adc__N_BITS_10...
Checking module sar_tb_working...
Warning: Wire sar_tb_working.$ne$sar_adc_ideal_conv.sv:63$41_Y is used but has no driver.
Found and reported 2 problems.

10. Executing SETUNDEF pass (replace undef values with defined constants).

11. Executing OPT pass (performing simple optimizations).

11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\frequency_divider\DIVISION=s32'00000000000000000000001111101000.
Optimizing module $paramod\sar_adc\N_BITS=s32'00000000000000000000000000001010.
Optimizing module $paramod\successive_approximation_register\N_BITS=s32'00000000000000000000000000001010.
<suppressed ~3 debug messages>
Optimizing module comparator_latch.
<suppressed ~14 debug messages>
Optimizing module digital_to_analog_converter.
<suppressed ~3 debug messages>
Optimizing module sample_and_hold.
Optimizing module sar_adc__N_BITS_10.
Optimizing module sar_tb_working.

11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\frequency_divider\DIVISION=s32'00000000000000000000001111101000'.
Finding identical cells in module `$paramod\sar_adc\N_BITS=s32'00000000000000000000000000001010'.
Finding identical cells in module `$paramod\successive_approximation_register\N_BITS=s32'00000000000000000000000000001010'.
Finding identical cells in module `\comparator_latch'.
Finding identical cells in module `\digital_to_analog_converter'.
Finding identical cells in module `\sample_and_hold'.
Finding identical cells in module `\sar_adc__N_BITS_10'.
Finding identical cells in module `\sar_tb_working'.
Removed a total of 0 cells.

11.3. Executing OPT_DFF pass (perform DFF optimizations).

11.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\frequency_divider\DIVISION=s32'00000000000000000000001111101000..
Finding unused cells or wires in module $paramod\sar_adc\N_BITS=s32'00000000000000000000000000001010..
Finding unused cells or wires in module $paramod\successive_approximation_register\N_BITS=s32'00000000000000000000000000001010..
Finding unused cells or wires in module \comparator_latch..
Finding unused cells or wires in module \digital_to_analog_converter..
Finding unused cells or wires in module \sample_and_hold..
Finding unused cells or wires in module \sar_adc__N_BITS_10..
Finding unused cells or wires in module \sar_tb_working..
Removed 137 unused cells and 141 unused wires.
<suppressed ~143 debug messages>

11.5. Finished fast OPT passes.

12. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\frequency_divider\DIVISION=s32'00000000000000000000001111101000..
Finding unused cells or wires in module $paramod\sar_adc\N_BITS=s32'00000000000000000000000000001010..
Finding unused cells or wires in module $paramod\successive_approximation_register\N_BITS=s32'00000000000000000000000000001010..
Finding unused cells or wires in module \comparator_latch..
Finding unused cells or wires in module \digital_to_analog_converter..
Finding unused cells or wires in module \sample_and_hold..
Finding unused cells or wires in module \sar_adc__N_BITS_10..
Finding unused cells or wires in module \sar_tb_working..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

13. Executing RTLIL backend.
Output filename: ../model/design_prep.il

Warnings: 2 unique messages, 2 total
End of script. Logfile hash: 3101076cc1, CPU: user 0.18s system 0.00s, MEM: 17.62 MB peak
Yosys 0.34+14 (git sha1 11b9deba9, clang 10.0.0-4ubuntu1 -fPIC -Os)
Time spent: 48% 4x opt_clean (0 sec), 13% 1x check (0 sec), ...
